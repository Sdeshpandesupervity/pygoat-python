pool:
  vmImage: 'ubuntu-latest'

variables:
  NVD_API_KEY: '583d3d52-3151-4e1f-87d5-363aa1729939'

steps:

  # Set up Python environment
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
      addToPath: true

  # Install necessary Python dependencies
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install Python Dependencies'

  # Generate SBOM using CycloneDX based on requirements.txt
  - script: |
      pip install cyclonedx-bom
      cyclonedx-py requirements -o reports/sbom.json
    displayName: 'Generate SBOM using CycloneDX'

  # Download NVD Data using API Key
  - script: |
      curl -H "apiKey: ${NVD_API_KEY}" "https://services.nvd.nist.gov/rest/json/cves/1.0?startIndex=0&resultsPerPage=10" > nvd-cve-data.json
    displayName: 'Download NVD Data'

  # Set up Dependency-Check
  - script: |
      wget https://github.com/jeremylong/DependencyCheck/releases/download/v10.0.4/dependency-check-10.0.4-release.zip
      unzip dependency-check-10.0.4-release.zip -d dependency-check
      chmod +x dependency-check/bin/dependency-check.sh
      echo "Directory contents after extraction:"
      ls -R
      export PATH=$(pwd)/dependency-check/bin:$PATH
      echo "nvd.api.key=${NVD_API_KEY}" > dependency-check.properties
    displayName: 'Download and Set Up OWASP Dependency-Check'

  # Run OWASP Dependency-Check
  - script: |
      dependency-check/bin/dependency-check.sh \
      --project "pygoat-python" \
      --out "$(Build.SourcesDirectory)/dependency-check-report" \
      --scan "$(Build.SourcesDirectory)" \
      --data "$(Build.SourcesDirectory)/nvd-data" \
      --format ALL --failOnCVSS 7
    displayName: 'Run OWASP Dependency-Check using Pre-Downloaded NVD Data'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/dependency-check-report'
      ArtifactName: 'DependencyCheckReport'
    displayName: 'Publish Dependency-Check Report'
