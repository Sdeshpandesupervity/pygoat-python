pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: StorageVariables

stages:
  - stage: AnalysisAndScanning
    displayName: 'Code Analysis and Security Scanning'
    jobs:
      - job: CodeAnalysis
        steps:
          - checkout: self
            fetchDepth: 0
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
          - script: |
              wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.1.0.4477-linux.zip
              unzip -q sonar-scanner-cli-6.1.0.4477-linux.zip
              export PATH=$(pwd)/sonar-scanner-*/bin:$PATH
          - task: SonarQubePrepare@6
            inputs:
              SonarQube: 'sonarqube'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'python-test'
              cliSources: '.'
              extraProperties: |
                sonar.projectVersion=1.0
                sonar.host.url=$(SONARQUBE_SERVER)
                sonar.login=$(SONARQUBE_TOKEN)
          - task: SonarQubeAnalyze@6
          - task: SonarQubePublish@6
            inputs:
              pollingTimeoutSec: '300'

      - job: SecurityScanning
        displayName: 'Trivy and OWASP Dependency Check'
        steps:
          - script: |
              sudo apt-get install -y wget
              wget -q https://github.com/aquasecurity/trivy/releases/download/v0.33.0/trivy_0.33.0_Linux-64bit.deb
              sudo dpkg -i trivy_0.33.0_Linux-64bit.deb
          - script: |
              trivy fs --exit-code 0 --severity CRITICAL,HIGH,LOW --format cyclonedx --output $(Build.ArtifactStagingDirectory)/trivy-repo-sbom.json .
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'az-storageaccount-access-test'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage blob upload \
                  --account-name viswajithcloudshellsa \
                  --container-name test \
                  --file $(Build.ArtifactStagingDirectory)/trivy-repo-sbom.json \
                  --name trivy-repo-sbom.json \
                  --overwrite
                  --connection-string $(AZURE_STORAGE_CONNECTION_STRING)
          - script: |
              wget -q https://github.com/jeremylong/DependencyCheck/releases/download/v10.0.4/dependency-check-10.0.4-release.zip
              unzip -q dependency-check-10.0.4-release.zip -d dependency-check
              chmod +x dependency-check/bin/dependency-check.sh
              echo "nvd.api.key=$(NVD_API_KEY)" > dependency-check.properties
          - script: |
              dependency-check/bin/dependency-check.sh --project "pygoat-python" --out "$(Build.SourcesDirectory)/dependency-check-report" --scan "$(Build.SourcesDirectory)" --format ALL --failOnCVSS 7 --overwrite
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'az-storageaccount-access-test'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                tar -czvf $(Build.SourcesDirectory)/dependency-check-report.tar.gz -C $(Build.SourcesDirectory) dependency-check-report
                az storage blob upload \
                  --account-name viswajithcloudshellsa \
                  --container-name test \
                  --file $(Build.SourcesDirectory)/dependency-check-report.tar.gz \
                  --name dependency-check-report.tar.gz \
                  --overwrite
                  --connection-string $(AZURE_STORAGE_CONNECTION_STRING)
  - stage: BuildAndScanImage
    displayName: 'Build and Image Scan'
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'sumedhdocker'
              repository: 'sumedh03/test'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'

      - job: ImageScan
        displayName: 'Trivy Image Scan'
        dependsOn: Build
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: 'sumedhdocker'
              command: 'login'
          - script: |
              sudo apt-get update
              sudo apt-get install -y wget
              wget -q https://github.com/aquasecurity/trivy/releases/download/v0.33.0/trivy_0.33.0_Linux-64bit.deb
              sudo dpkg -i trivy_0.33.0_Linux-64bit.deb
          - script: |
              trivy image --exit-code 0 --severity CRITICAL,HIGH,LOW --format cyclonedx --output $(Build.ArtifactStagingDirectory)/image-sbom.json $(sumedhdocker)/sumedh03/test:$(Build.BuildId)
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'az-storageaccount-access-test'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage blob upload \
                  --account-name viswajithcloudshellsa \
                  --container-name test \
                  --file $(Build.ArtifactStagingDirectory)/image-sbom.json \
                  --name image-sbom.json \
                  --overwrite
                  --connection-string $(AZURE_STORAGE_CONNECTION_STRING)